{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","onChange","e","target","value","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","element","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoFromLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61063ae6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = ({ inputText, setInputText, todos, setTodos, setStatus }) => {\r\n\tconst inputTextHandler = e => {\r\n\t\tsetInputText(e.target.value);\r\n\t};\r\n\r\n\tconst submitTodoHandler = e => {\r\n\t\te.preventDefault();\r\n\t\tsetTodos([\r\n\t\t\t...todos,\r\n\t\t\t{ text: inputText, completed: false, id: Math.random() * 1000 },\r\n\t\t]);\r\n\t\tsetInputText(\"\");\r\n\t};\r\n\r\n\tconst statusHandler = e => {\r\n\t\tsetStatus(e.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form>\r\n\t\t\t<input\r\n\t\t\t\tonChange={inputTextHandler}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={inputText}\r\n\t\t\t\tclassName=\"todo-input\"\r\n\t\t\t/>\r\n\t\t\t<button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n\t\t\t\t<i className=\"fas fa-plus-square\"></i>\r\n\t\t\t</button>\r\n\t\t\t<div onChange={statusHandler} className=\"select\">\r\n\t\t\t\t<select name=\"todos\" className=\"filter-todo\">\r\n\t\t\t\t\t<option value=\"all\">All</option>\r\n\t\t\t\t\t<option value=\"completed\">Completed</option>\r\n\t\t\t\t\t<option value=\"uncompleted\">Uncompleted</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n\t// events\r\n\tconst deleteHandler = () => {\r\n\t\tsetTodos(todos.filter(element => element.id !== todo.id));\r\n\t};\r\n\tconst completeHandler = () => {\r\n\t\tsetTodos(\r\n\t\t\ttodos.map(item => {\r\n\t\t\t\tif (item.id === todo.id) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tcompleted: !item.completed,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn item;\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"todo\">\r\n\t\t\t<li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n\t\t\t\t{text}\r\n\t\t\t</li>\r\n\t\t\t<button onClick={completeHandler} className=\"complete-btn\">\r\n\t\t\t\t<i className=\"fas fa-check\"></i>\r\n\t\t\t</button>\r\n\t\t\t<button onClick={deleteHandler} className=\"trash-btn\">\r\n\t\t\t\t<i className=\"fas fa-trash\"></i>\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n\treturn (\r\n\t\t<div className=\"todo-container\">\r\n\t\t\t<ul className=\"todo-list\">\r\n\t\t\t\t{filteredTodos.map(todo => (\r\n\t\t\t\t\t<Todo\r\n\t\t\t\t\t\tkey={todo.id}\r\n\t\t\t\t\t\ttext={todo.text}\r\n\t\t\t\t\t\ttodos={todos}\r\n\t\t\t\t\t\tsetTodos={setTodos}\r\n\t\t\t\t\t\ttodo={todo}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n\t// status stuff\n\tconst [inputText, setInputText] = useState(\"\");\n\tconst [todos, setTodos] = useState([]);\n\tconst [status, setStatus] = useState(\"all\");\n\tconst [filteredTodos, setFilteredTodos] = useState([]);\n\n\tuseEffect(() => {\n\t\tgetLocalTodos();\n\t}, []);\n\n\t// useeffect\n\tuseEffect(() => {\n\t\tfilterHandler();\n\t\tsaveLocalTodos();\n\t}, [todos, status]);\n\n\t//functions\n\tconst filterHandler = () => {\n\t\tswitch (status) {\n\t\t\tcase \"completed\":\n\t\t\t\tsetFilteredTodos(todos.filter(todo => todo.completed === true));\n\t\t\t\tbreak;\n\n\t\t\tcase \"uncompleted\":\n\t\t\t\tsetFilteredTodos(todos.filter(todo => todo.completed === false));\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tsetFilteredTodos(todos);\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tconst saveLocalTodos = () => {\n\t\tlocalStorage.setItem(\"todos\", JSON.stringify(todos));\n\t};\n\tconst getLocalTodos = () => {\n\t\tif (localStorage.getItem(\"todos\") === null) {\n\t\t\tlocalStorage.setItem(\"todos\", JSON.stringify([]));\n\t\t} else {\n\t\t\tlet todoFromLocal = JSON.parse(localStorage.getItem(\"todos\"));\n\t\t\tsetTodos(todoFromLocal);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header>\n\t\t\t\t<h1>To Do List </h1>\n\t\t\t</header>\n\t\t\t<Form\n\t\t\t\tinputText={inputText}\n\t\t\t\ttodos={todos}\n\t\t\t\tsetTodos={setTodos}\n\t\t\t\tsetInputText={setInputText}\n\t\t\t\tsetStatus={setStatus}\n\t\t\t/>\n\n\t\t\t<TodoList\n\t\t\t\ttodos={todos}\n\t\t\t\tsetTodos={setTodos}\n\t\t\t\tfilteredTodos={filteredTodos}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}